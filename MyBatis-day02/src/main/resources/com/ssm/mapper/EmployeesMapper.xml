<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ssm.mapper.EmployeesMapper">

<!-- 

	namespace : interface 的全限定名

 -->

<select id="getEmpByDeptId" resultType="emp" databaseId="mysql">
	select * from tb_employees where d_id = #{id}
</select>


<resultMap id="myEmpDiscriminator" type="emp">
<!-- id 定义主键 
 
	column: 指定查询出来的列名
	
	property:指定对应的JavaBean属性


-->

	<id column="id" property="id"  />
	<result column="last_name" property="lastName" />
	<result column="email"  property="email" />
	<result column="gender"  property="gender" />
	<!-- 
		column：指定判断的列名
		
		javaType:列值对应的java类型
	
		女生：获取   部门
		
		男生：修改email为 name
	 -->
	<discriminator javaType="string" column="gender">
		<case value="0" resultType="com.ssm.domain.Employees">
			<association property="dept"  select="com.ssm.mapper.DeptMapper.getDeptById" column="{did=d_id}" fetchType="lazy" ></association>
		</case>
		<case value="1">
			<id column="id" property="id"  />
			<result column="last_name" property="lastName" />
			<result column="last_name"  property="email" />
			<result column="gender"  property="gender" />
		</case>
	</discriminator>
</resultMap>

<select id="getEmpByDiscriminatorId" resultMap="myEmpDiscriminator">
	select * from tb_employees where id = #{id}
</select>


<select id="getEmpById" resultType="emp">
	select * from tb_employees where id = #{id}
</select>

<resultMap id="empMap" type="emp">
<!-- id 定义主键 
 
	column: 指定查询出来的列名
	
	property:指定对应的JavaBean属性


-->

	<id column="id" property="id"  />
	<result column="last_name" property="lastName" />
	<result column="email"  property="email" />
	<result column="gender"  property="gender" />
</resultMap>

<select id="getEmpById1" resultMap="empMap">
	select * from tb_employees where id = #{id}
</select>


<resultMap id="empDept" type="emp">
<!-- id 定义主键 
 
	column: 指定查询出来的列名
	
	property:指定对应的JavaBean属性


-->
	<id column="id" property="id"  />
	<result column="last_name" property="lastName" />
	<result column="email"  property="email" />
	<result column="gender"  property="gender" />
	<result column ="did" property="dept.id"/>
	<result column="dept_name" property="dept.deptName"/>
 </resultMap>

<select id="getEmpAndDeptById" resultMap="empDept">
	select e.id id,e.last_name last_name,e.email email,e.gender gender,e.d_id d_id, d.id did,d.dept_name,dept_name from tb_employees e left join tb_dept d on e.d_id = d.id where e.id = #{id}
</select>



<resultMap id="empDeptAssociation" type="emp">
<!-- id 定义主键 
 
	column: 指定查询出来的列名
	
	property:指定对应的JavaBean属性


-->
	<id column="id" property="id"  />
	<result column="last_name" property="lastName" />
	<result column="email"  property="email" />
	<result column="gender"  property="gender" />
	<!-- 
	
		property="dept":指定哪个属性是联合的对象
		
		javaType:指定这个属性对象的类型
		
	 -->
	<association property="dept"  javaType="com.ssm.domain.Dept" >
		<id column ="did" property="id"/>
		<result column="dept_name" property="deptName"/>
	</association>
 </resultMap>

<select id="getEmpAndDeptAssociationById" resultMap="empDeptAssociation">
	select e.id id,e.last_name last_name,e.email email,e.gender gender,e.d_id d_id, d.id did,d.dept_name,dept_name from tb_employees e left join tb_dept d on e.d_id = d.id where e.id = #{id}
</select>


<resultMap id="empDeptStepAssociation" type="emp">
<!-- id 定义主键 
 
	column: 指定查询出来的列名
	
	property:指定对应的JavaBean属性


-->
	<id column="id" property="id"  />
	<result column="last_name" property="lastName" />
	<result column="email"  property="email" />
	<result column="gender"  property="gender" />
	<!-- 
	
		property="dept":指定哪个属性是联合的对象
		
		javaType:指定这个属性对象的类型
		
	 -->
	<association property="dept"  select="com.ssm.mapper.DeptMapper.getDeptById" column="{did=d_id}" fetchType="lazy" >
	</association>

 </resultMap>

<select id="getEmpAndDeptAssociationStepById" resultMap="empDeptStepAssociation">
	select e.id id,e.last_name last_name,e.email email,e.gender gender,e.d_id d_id from tb_employees e  where e.id = #{id}
</select>




	 <!-- 查询员工，要求，携带了哪个字段查询条件就带上这个字段的值 -->
	 <!-- public List<Employee> getEmpsByConditionIf(Employee employee); -->
	 <select id="getEmpsByConditionIf" resultType="com.atguigu.mybatis.bean.Employee">
	 	select * from tbl_employee
	 	<!-- where -->
	 	<where>
		 	<!-- test：判断表达式（OGNL）
		 	OGNL参照PPT或者官方文档。
		 	  	 c:if  test
		 	从参数中取值进行判断
		 	
		 	遇见特殊符号应该去写转义字符：
		 	&&：
		 	-->
		 	<if test="id!=null">
		 		id=#{id}
		 	</if>
		 	<if test="lastName!=null &amp;&amp; lastName!=&quot;&quot;">
		 		and last_name like #{lastName}
		 	</if>
		 	<if test="email!=null and email.trim()!=&quot;&quot;">
		 		and email=#{email}
		 	</if> 
		 	<!-- ognl会进行字符串与数字的转换判断  "0"==0 -->
		 	<if test="gender==0 or gender==1">
		 	 	and gender=#{gender}
		 	</if>
	 	</where>
	 </select>




 
		



</mapper>